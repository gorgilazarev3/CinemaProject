@model CinemaProject.Domain.DomainModels.Ticket
@inject CinemaProject.Service.Interface.IMovieService movieService
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ForMovieId" class="control-label">Select the movie that the ticket would apply to</label>
                <select class="form-control" asp-for="ForMovieId" asp-items="movieService.FindAllMovies().Select(movie => new SelectListItem { Text = movie.Name, Value = movie.Id.ToString() })"></select>
                <span asp-validation-for="ForMovieId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValidForDate" class="control-label">Valid for date</label>
                <input asp-for="ValidForDate" class="form-control" />
                <span asp-validation-for="ValidForDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
